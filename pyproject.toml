[tool.poetry]
name = "story-teller"
version = "0.1.0"
description = "REST API for managing stories built with FastAPI"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
fastapi = {extras = ["standard"], version = "^0.116.0"}
uvicorn = {extras = ["standard"], version = "^0.35.0"}
pydantic = "^2.11.0"
python-multipart = "^0.0.20"
python-jose = {extras = ["cryptography"], version = "^3.5.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-dotenv = "^1.1.0"
sqlalchemy = "^2.0.0"
alembic = "^1.16.0"
mysql-connector-python = "^9.1.0"
sentry-sdk = {extras = ["fastapi"], version = "^2.32.0"}
langchain-core = "^0.3.0"
langchain-openai = "^0.2.0"
langchain-community = "^0.3.0"
pyyaml = "^6.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.0"
pytest-asyncio = "^1.0.0"
pytest-cov = "^6.0.0"
httpx = "^0.28.0"
black = "^25.1.0"
isort = "^6.0.0"
flake8 = "^7.3.0"
mypy = "^1.16.0"
locust = "^2.32.3"
types-PyYAML = "^6.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "slow: Slow running tests"
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "__pycache__/*",
    "*.pyc",
    ".venv/*",
    "venv/*",
    "htmlcov/*",
    "reports/*",
    "logs/*",
    "performance_tests/*",
    "migrate_to_mysql.py",
    "docker-setup.sh",
    "update_dependencies.sh",
    "init-scripts/*",
    "Dockerfile",
    "docker-compose*.yml",
    "*.db",
    ".coverage"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]
show_missing = true
precision = 2
skip_covered = false
skip_empty = true
