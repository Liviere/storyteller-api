{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Run FastAPI Development Server (Poetry)",
			"type": "shell",
			"command": "poetry run uvicorn main:app --reload --host 0.0.0.0 --port 8080",
			"group": "build",
			"isBackground": true,
			"problemMatcher": []
		},
		{
			"label": "Poetry: Install Dependencies",
			"type": "shell",
			"command": "poetry install",
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Poetry: Add Dependency",
			"type": "shell",
			"command": "poetry add ${input:packageName}",
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Poetry: Format Code (Black)",
			"type": "shell",
			"command": "poetry run black .",
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Poetry: Sort Imports (isort)",
			"type": "shell",
			"command": "poetry run isort .",
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Poetry: Lint Code (flake8)",
			"type": "shell",
			"command": "poetry run flake8 .",
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Poetry: Type Check (mypy)",
			"type": "shell",
			"command": "poetry run mypy .",
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Poetry: Run Tests",
			"type": "shell",
			"command": "poetry run pytest",
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Poetry: Run Tests with Coverage",
			"type": "shell",
			"command": "poetry run pytest --cov=. --cov-report=term-missing --cov-report=html:reports/coverage",
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Poetry: Run Unit Tests Only",
			"type": "shell",
			"command": "poetry run pytest tests/test_models.py tests/test_schemas.py tests/test_main.py -v",
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Poetry: Run API Tests Only",
			"type": "shell",
			"command": "poetry run pytest tests/test_api.py -v",
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Poetry: Run Integration Tests Only",
			"type": "shell",
			"command": "poetry run pytest tests/test_integration.py -v",
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Poetry: Check Outdated Packages",
			"type": "shell",
			"command": "poetry show --outdated",
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Poetry: Update All Dependencies",
			"type": "shell",
			"command": "poetry update",
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Poetry: Update Core Dependencies (Priority)",
			"type": "shell",
			"command": "poetry update fastapi sqlalchemy pydantic uvicorn",
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Poetry: Update with Priority Script",
			"type": "shell",
			"command": "./update_dependencies.sh",
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Locust: Start Web Interface",
			"type": "shell",
			"command": "poetry run locust -f performance_tests/locustfile.py --host=http://localhost:8080",
			"group": "test",
			"isBackground": true,
			"problemMatcher": []
		},
		{
			"label": "Locust: Light Load Test",
			"type": "shell",
			"command": "poetry run locust -f performance_tests/locustfile.py --host=http://localhost:8080 --headless --users 10 --spawn-rate 2 --run-time 2m --html reports/performance/light_load_report.html",
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Locust: Medium Load Test",
			"type": "shell",
			"command": "poetry run locust -f performance_tests/locustfile.py --host=http://localhost:8080 --headless --users 50 --spawn-rate 5 --run-time 5m --html reports/performance/medium_load_report.html",
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Locust: Heavy Load Test",
			"type": "shell",
			"command": "poetry run locust -f performance_tests/locustfile.py --host=http://localhost:8080 --headless --users 200 --spawn-rate 10 --run-time 10m --html reports/performance/heavy_load_report.html",
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Locust: Stress Test",
			"type": "shell",
			"command": "poetry run locust -f performance_tests/locustfile.py --host=http://localhost:8080 --headless --users 500 --spawn-rate 20 --run-time 5m --html reports/performance/stress_test_report.html",
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Locust: Spike Test",
			"type": "shell",
			"command": "poetry run locust -f performance_tests/locustfile.py --host=http://localhost:8080 --headless --users 100 --spawn-rate 50 --run-time 3m --html reports/performance/spike_test_report.html",
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Locust: Endurance Test",
			"type": "shell",
			"command": "poetry run locust -f performance_tests/locustfile.py --host=http://localhost:8080 --headless --users 30 --spawn-rate 3 --run-time 30m --html reports/performance/endurance_test_report.html",
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Docker: Start Services",
			"type": "shell",
			"command": "./docker-setup.sh start",
			"group": "build",
			"isBackground": true,
			"problemMatcher": [],
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared",
				"showReuseMessage": true
			}
		},
		{
			"label": "Docker: Stop Services",
			"type": "shell",
			"command": "./docker-setup.sh stop",
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Docker: Restart Services",
			"type": "shell",
			"command": "./docker-setup.sh restart",
			"group": "build",
			"isBackground": true,
			"problemMatcher": []
		},
		{
			"label": "Docker: Build Application",
			"type": "shell",
			"command": "./docker-setup.sh build",
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Docker: Show Logs",
			"type": "shell",
			"command": "./docker-setup.sh logs",
			"group": "build",
			"isBackground": true,
			"problemMatcher": [],
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "new"
			}
		},
		{
			"label": "Docker: Connect to MySQL",
			"type": "shell",
			"command": "./docker-setup.sh mysql",
			"group": "build",
			"problemMatcher": [],
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "new"
			}
		},
		{
			"label": "Docker: Migrate from SQLite",
			"type": "shell",
			"command": "./docker-setup.sh migrate",
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Docker: Clean All (⚠️ Removes Data)",
			"type": "shell",
			"command": "./docker-setup.sh clean",
			"group": "build",
			"problemMatcher": [],
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "new"
			}
		},
		{
			"label": "Docker Test: Start Test Database",
			"type": "shell",
			"command": "docker-compose -f docker-compose.test.yml up -d",
			"group": "test",
			"isBackground": true,
			"problemMatcher": []
		},
		{
			"label": "Docker Test: Stop Test Database",
			"type": "shell",
			"command": "docker-compose -f docker-compose.test.yml down",
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Docker Test: Clean Test Database",
			"type": "shell",
			"command": "docker-compose -f docker-compose.test.yml down -v",
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Test: Run with MySQL Test Database",
			"type": "shell",
			"command": "TEST_DATABASE_URL=\"mysql+mysqlconnector://test_user:test_pass@localhost:3307/storyteller_test\" poetry run pytest tests/ -v",
			"group": "test",
			"dependsOn": "Docker Test: Start Test Database",
			"problemMatcher": []
		},
		{
			"label": "Complete: Start Development Environment",
			"dependsOrder": "sequence",
			"dependsOn": [
				"Docker: Start Services",
				"Run FastAPI Development Server (Poetry)"
			],
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Complete: Full Test Suite with MySQL",
			"dependsOrder": "sequence",
			"dependsOn": [
				"Docker Test: Start Test Database",
				"Test: Run with MySQL Test Database",
				"Docker Test: Clean Test Database"
			],
			"group": "test",
			"problemMatcher": []
		}
	],
	"inputs": [
		{
			"id": "packageName",
			"description": "Package name to add",
			"default": "fastapi",
			"type": "promptString"
		}
	]
}
